name: Quality

on: 
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - reopened
    branches: [ develop ]
jobs:
  analyze:
    name: Analyze
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud workspace
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar-cache2
          restore-keys: ${{ runner.os }}-sonar-cache2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner2
          restore-keys: ${{ runner.os }}-sonar-scanner2
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner --version 4.8.0
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"cboiam_ImplementationDiscovery" /o:"cboiam" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**\TestResults\results.trx" /d:sonar.cs.opencover.reportPaths="**\TestResults\coverage.opencover.xml" /d:sonar.scanAllFiles=true 
          dotnet build
          dotnet test --logger "trx;LogFileName=results.trx" /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/ /p:CollectCoverage=true
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
